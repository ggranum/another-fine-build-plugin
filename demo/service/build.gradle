plugins {
    id 'application'
    id 'maven-publish'
}
repositories {
    jcenter();
}

dependencies {
    implementation "com.google.guava:guava:$afb.versions.guava"
}

jar {
    archiveBaseName.set(project.name)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    //noinspection GroovyAssignabilityCheck
    archiveClassifier.set("sources")
    archiveBaseName.set(project.name)
    from sourceSets.main.allSource
}

application {
  applicationName = project.parent.name + '-' + project.name
  mainClassName = 'com.fetherbrik.gradle.afb.demo.DemoMain'
}

distTar {
  outputs.dir(new File(project.buildDir, afb.info.docker.buildDir + '/build/distributions'));
  outputs.dir(new File(project.buildDir, afb.info.docker.buildDir + '/build/etc'));
  outputs.dir(new File(project.buildDir, afb.info.docker.buildDir + '/build/config'));
}

distTar.doLast({
  copy {
    from new File(project.buildDir, '/distributions')
    into new File(project.buildDir, afb.info.docker.buildDir + '/build/distributions')
    include '**/*.tar'
  }
  copy {
    from project.projectDir
    into new File(project.buildDir, afb.info.docker.buildDir)
    include 'etc/**/*', 'config/**/*'
  }
})

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        archives(MavenPublication) {
            groupId = afb.artifacts.groupId
            artifactId = project.name
            version = afb.info.version.full
            artifact jar
            artifact sourcesJar
        }
    }
    repositories {
        maven {
            url afb.info.target.isSnapshot ? afb.artifacts.deploy.snapshotUrl : afb.artifacts.deploy.url
            name afb.artifacts.repoName
            credentials { p ->
                username = afb.artifacts.deploy.username
                password = afb.artifacts.deploy.apiKey
            }
        }
    }
}
